

@misc{myst-parser, 
  title={MyST - Markedly Structured Text - Parser}, 
  url={https://myst-parser.readthedocs.io/en/latest/}, 
  urldate = {20.01.2023},
} 

@misc{Overview,
	note = {[Online; accessed 2023-01-30]},
	title = {Overview},
	howpublished = {https://myst-parser.readthedocs.io/en/latest/},
}

@misc{Krunic2023Documentation,
	note = {[Online; accessed 2023-01-30]},
	author = {Krunic, Momcilo},
	year = {2023},
	month = {jan 30},
	title = {Documentation as Code in Automotive System/Software Engineering},
	url = {https://gitlab.com/momcilo_krunic/elektronika_ir_elektrotechnika_2023/},
}



@misc{sphinx, 
  title={Welcome - Sphinx documentation}, 
  url={https://www.sphinx-doc.org/en/master/}, 
  urldate = {20.01.2023},
} 

@book{continuous-delivery,
  author = {Humble, Jez and Farley, David},
  title = {Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation},
  year = {2010},
  isbn = {0321601912},
  publisher = {Addison-Wesley Professional},
  edition = {1st},
  abstract = {Getting software released to users is often a painful, risky, and time-consuming process. This groundbreaking new book sets out the principles and technical practices that enable rapid, incremental delivery of high quality, valuable new functionality to users. Through automation of the build, deployment, and testing process, and improved collaboration between developers, testers, and operations, delivery teams can get changes released in a matter of hours sometimes even minutesno matter what the size of a project or the complexity of its code base. Jez Humble and David Farley begin by presenting the foundations of a rapid, reliable, low-risk delivery process. Next, they introduce the deployment pipeline, an automated process for managing all changes, from check-in to release. Finally, they discuss the ecosystem needed to support continuous delivery, from infrastructure, data and configuration management to governance. The authors introduce state-of-the-art techniques, including automated infrastructure management and data migration, and the use of virtualization. For each, they review key issues, identify best practices, and demonstrate how to mitigate risks. Coverage includes Automating all facets of building, integrating, testing, and deploying software Implementing deployment pipelines at team and organizational levels Improving collaboration between developers, testers, and operations Developing features incrementally on large and distributed teams Implementing an effective configuration management strategy Automating acceptance testing, from analysis to implementation Testing capacity and other non-functional requirements Implementing continuous deployment and zero-downtime releases Managing infrastructure, data, components and dependencies Navigating risk management, compliance, and auditing Whether youre a developer, systems administrator, tester, or manager, this book will help your organization move from idea to release faster than everso you can deliver value to your business rapidly and reliably.}
}

@book{atomic-habits,
  author = {Clear, James},
  title = {Atomic Habits: Tiny Changes, Remarkable Results : An Easy & Proven Way to Build Good Habits & Break Bad Ones},
  year = {2018},
  isbn = {9780735211292, 0735211299},
  publisher = {Avery, an imprint of Penguin Random House, New York, New York, 2018},
  edition = {1st},
  abstract = {
  An atomic habit is a regular practice or routine that is not only small and easy to do but is also the source of incredible power; a component of the system of compound growth.
  Bad habits repeat themselves again and again not because you don’t want to change, but because you have the wrong system for change.
  Changes that seem small and unimportant at first will compound into remarkable results if you’re willing to stick with them for years.}
}

@book{team-topologies,
  title={Team Topologies: Organizing Business and Technology Teams for Fast Flow},
  author={Skelton, M. and Malan, R. and Pais, M.},
  isbn={9781942788812},
  lccn={2019016691},
  series={G - Reference,Information and Interdisciplinary Subjects Series},
  url={https://books.google.de/books?id=oFdRuAEACAAJ},
  year={2019},
  publisher={IT Revolution}
}

@misc{c4-model, 
  title={C4 Model}, 
  url={https://c4model.com/}, 
  urldate = {20.01.2023},
} 

@misc{arc42, 
  title={arc42}, 
  url={https://arc42.org/}, 
  urldate = {26.01.2023},
} 

@misc{plantuml, 
  title={PlantUML}, 
  url={https://plantuml.com/}, 
  urldate = {26.01.2023},
} 

@misc{plantuml-c4, 
  title={PlantUML C4}, 
  url={https://github.com/plantuml-stdlib/C4-PlantUML}, 
  urldate = {26.01.2023},
} 

@misc{markdown, 
  title={Markdownguide}, 
  url={https://www.markdownguide.org/}, 
  urldate = {22.01.2023},
} 

@misc{linux, 
  title={Linux technical documentation}, 
  url={https://www.kernel.org/doc/html/v4.10/index.html}, 
  urldate = {22.01.2023},
} 

@misc{trunkbaseddevelopment, 
  title={Trunk based development}, 
  url={https://trunkbaseddevelopment.com/}, 
  urldate = {23.01.2023},
} 

@misc{sphinx-examples, 
  title={Sphinx examples}, 
  url={https://www.sphinx-doc.org/en/master/examples.html}, 
  urldate = {23.01.2023},
} 

@misc{srd-template, 
  title={SRD Template}, 
  url={https://gitlab.com/labsoftdev/docs-as-code/-/blob/main/templates/micro-V/Requirements/SRD-Requirement_Template.md}, 
  urldate = {25.01.2023},
} 

@misc{sad-template, 
  title={SAD Template}, 
  url={https://gitlab.com/labsoftdev/docs-as-code/-/blob/main/templates/micro-V/Architecture/SAD-Software_Architecture_Document.md}, 
  urldate = {26.01.2023},
} 

@article{sweller1998cognitive,
  title={Cognitive architecture and instructional design},
  author={Sweller, John and Van Merrienboer, Jeroen JG and Paas, Fred GWC},
  journal={Educational psychology review},
  volume={10},
  number={3},
  pages={251--296},
  year={1998},
  publisher={Springer}
}

@article{no-silver-bullet,
  author={Brooks},
  journal={Computer}, 
  title={No Silver Bullet Essence and Accidents of Software Engineering}, 
  year={1987},
  volume={20},
  number={4},
  pages={10-19},
  doi={10.1109/MC.1987.1663532}
}

@article{conway1968,
	title = {HOW DO COMMITTEES INVENT},
	url = {http://www.melconway.com/Home/pdf/committees.pdf},
	language = {en},
	journal = {Datamation},
	author = {Conway, Melvin E},
	year = {1968},
	keywords = {TT refs},
	pages = {4},
}

@book{farley2021modern,
  title={Modern Software Engineering: Doing What Works to Build Better Software Faster},
  author={Farley, D.},
  isbn={9780137314911},
  url={https://books.google.de/books?id=ZKxHzgEACAAJ},
  year={2021},
  publisher={ADDISON WESLEY Publishing Company Incorporated}
}

@inproceedings{franca-dsl,
  author = {Schlichthärle, Stefan and Becker, Klaus and Sperber, Sebastian},
  booktitle={A Domain-Specific Language Based Architecture Modeling Approach for Safety Critical Automotive Software Systems},
  year = {2020},
  month = {02},
  pages = {},
  title = {A Domain-Specific Language Based Architecture Modeling Approach for Safety Critical Automotive Software Systems},
  doi={10.4230/OASIcs.ASE.2020.2}
}

@book{beck2003test,
  title={Test-driven Development: By Example},
  author={Beck, K.},
  isbn={9780321146533},
  lccn={2002028037},
  series={Addison-Wesley signature series},
  url={https://books.google.de/books?id=CUlsAQAAQBAJ},
  year={2003},
  publisher={Addison-Wesley}
}

@book{freeman2009growing,
  title={Growing Object-Oriented Software, Guided by Tests},
  author={Freeman, S. and Pryce, N.},
  isbn={9780321699763},
  series={Addison-Wesley Signature Series (Beck)},
  url={https://books.google.de/books?id=QJA3dM8Uix0C},
  year={2009},
  publisher={Pearson Education}
}

@book{deming2018out,
  title={Out of the Crisis, reissue},
  author={Deming, W.E. and Cahill, K.E. and Allan, K.L.},
  isbn={9780262350037},
  url={https://books.google.de/books?id=PTNwDwAAQBAJ},
  year={2018},
  publisher={MIT Press}
}

@book{deming1992system,
  title={A System of Profound Knowledge},
  author={Deming, W.E. and British Deming Association},
  isbn={9781873915097},
  url={https://books.google.de/books?id=v-RSMwEACAAJ},
  year={1992},
  publisher={British Deming Association}
}

@book{forsgren2018accelerate,
  title={Accelerate: The Science Behind DevOps : Building and Scaling High Performing Technology Organizations},
  author={Forsgren, N. and Humble, J. and Kim, G.},
  isbn={9781942788331},
  lccn={2017061478},
  series={G - Reference,Information and Interdisciplinary Subjects Series},
  url={https://books.google.de/books?id=85XHAQAACAAJ},
  year={2018},
  publisher={IT Revolution}
}

@book{imai1986kaizen,
  title={Kaizen: The Key To Japan's Competitive Success},
  author={Imai, M.},
  isbn={9780075543329},
  lccn={gb97015031},
  url={https://books.google.de/books?id=q0rCTQlvNMoC},
  year={1986},
  publisher={McGraw-Hill Education}
}

@book{mueller2008automotive,
  title={Automotive SPICE in Practice: Surviving Interpretation and Assessment},
  author={Mueller, M. and Hoermann, K.},
  isbn={9781933952291},
  lccn={2008029002},
  series={Rocky Nook Series},
  url={https://books.google.de/books?id=7wcoAQAAMAAJ},
  year={2008},
  publisher={Rocky Nook}
}

@misc{aspice, 
  title={ASPICE Guide}, 
  url={https://knuevenermackert.com/wp-content/uploads/2021/03/ASPICE-Guide-KM2021-01.pdf}, 
  urldate = {03.02.2023},
} 

@inproceedings{williams2003,
  author={Williams, L. and Maximilien, E.M. and Vouk, M.},
  booktitle={14th International Symposium on Software Reliability Engineering, 2003. ISSRE 2003.}, 
  title={Test-driven development as a defect-reduction practice}, 
  year={2003},
  volume={},
  number={},
  pages={34-45},
  doi={10.1109/ISSRE.2003.1251029}
}

@article{melnik2007,
  author = {G. Melnik and R. Jeffries},
  journal = {IEEE Software},
  title = {Introduction: TDD--The Art of Fearless Programming},
  year = {2007},
  volume = {24},
  number = {03},
  issn = {1937-4194},
  pages = {24-30},
  abstract = {Test-driven development is a discipline of design and programming where every line of new code is written in response to a test the programmer writes just before coding. This special issue of IEEE Software includes seven feature articles on various aspects of TDD and a Point/Counterpoint debate on the use of mock objects in applying it. The articles demonstrate the ways TDD is being used in nontrivial situations (database development, embedded software development, GUI development, performance tuning), signifying an adoption level for the practice beyond the visionary phase and into the early mainstream. In this introduction to the special issue on TDD, the guest editors also summarize selected TDD empirical studies from industry and academia.},
  keywords = {program testing;software engineering;test-driven development;tdd},
  doi = {10.1109/MS.2007.75},
  publisher = {IEEE Computer Society},
  address = {Los Alamitos, CA, USA},
  month = {may}
}